{"ast":null,"code":"var _jsxFileName = \"/home/matt/Projects/Cypress2/frontend/src/pages/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { authService } from '../services/api';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login({\n  setIsLoggedIn\n}) {\n  _s();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [serverStatus, setServerStatus] = useState(null);\n  const navigate = useNavigate();\n\n  // Check server health on component mount\n  useEffect(() => {\n    checkServerHealth();\n  }, []);\n  const checkServerHealth = async () => {\n    try {\n      setServerStatus('checking');\n      // Try to reach the server's health endpoint\n      const response = await axios.get('http://localhost:5000/health', {\n        timeout: 5000\n      });\n      if (response.status === 200) {\n        console.log('Server is healthy:', response.data);\n        setServerStatus('online');\n      } else {\n        setServerStatus('error');\n      }\n    } catch (err) {\n      console.error('Server health check failed:', err);\n      setServerStatus('offline');\n    }\n  };\n  const {\n    email,\n    password\n  } = formData;\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n    try {\n      console.log('Login form submitted:', {\n        email: formData.email\n      });\n\n      // If server was offline, check again first\n      if (serverStatus === 'offline') {\n        await checkServerHealth();\n      }\n      console.log('Calling auth service login...');\n      const response = await authService.login(formData);\n      console.log('Login response received:', response.data);\n      if (response.data.success) {\n        // Double check token exists\n        if (!response.data.token) {\n          console.error('No token in response:', response.data);\n          throw new Error('Authentication failed: No token received');\n        }\n\n        // Store token with proper error handling\n        try {\n          localStorage.removeItem('token'); // Clear any existing token first\n          localStorage.setItem('token', response.data.token);\n          console.log('Token stored successfully');\n        } catch (storageError) {\n          console.error('Error storing token in localStorage:', storageError);\n          throw new Error('Failed to store authentication data');\n        }\n\n        // Create a proper user object\n        let userData = {};\n        if (response.data.user) {\n          userData = {\n            id: response.data.user.id || response.data.user._id,\n            username: response.data.user.username || 'User',\n            email: response.data.user.email || formData.email\n          };\n        } else {\n          console.warn('No user data in response, creating minimal user data');\n          userData = {\n            id: 'unknown',\n            username: formData.email.split('@')[0],\n            email: formData.email\n          };\n        }\n        console.log('Storing user data:', userData);\n        try {\n          localStorage.removeItem('user'); // Clear existing user data first\n          localStorage.setItem('user', JSON.stringify(userData));\n          console.log('User data stored successfully');\n        } catch (userStorageError) {\n          console.error('Error storing user data:', userStorageError);\n          // Continue anyway since we have the token\n        }\n\n        // Update login state in the app\n        console.log('Setting isLoggedIn to true');\n        setIsLoggedIn(true);\n\n        // Redirect with slight delay to ensure state updates\n        setTimeout(() => {\n          console.log('Redirecting to dashboard...');\n          navigate('/dashboard');\n        }, 100);\n      } else {\n        console.error('Login failed with success: false', response.data);\n        setError('Login failed: ' + (response.data.message || 'Unknown error'));\n      }\n    } catch (err) {\n      console.error('Login error:', err);\n      let errorMessage = 'Authentication failed';\n      if (err.response) {\n        var _err$response$data;\n        // The request was made and the server responded with an error status\n        console.error('Server error response:', err.response.data);\n        errorMessage = ((_err$response$data = err.response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || `Server error: ${err.response.status}`;\n      } else if (err.request) {\n        // The request was made but no response was received\n        console.error('No response received from server');\n        errorMessage = 'Network error - server unreachable. Please check your connection.';\n\n        // Set server status to offline\n        setServerStatus('offline');\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.error('Error during login request:', err.message);\n        errorMessage = err.message;\n      }\n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"form-title\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), serverStatus === 'offline' && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'orange',\n        marginBottom: '1rem',\n        padding: '0.5rem',\n        backgroundColor: '#fff3cd',\n        borderRadius: '4px',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Server appears to be offline or unreachable.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary\",\n        onClick: checkServerHealth,\n        style: {\n          marginTop: '0.5rem'\n        },\n        children: \"Check Server Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        marginBottom: '1rem',\n        textAlign: 'center'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: email,\n          onChange: handleChange,\n          className: \"form-control\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: password,\n          onChange: handleChange,\n          className: \"form-control\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        style: {\n          width: '100%',\n          marginTop: '1rem'\n        },\n        disabled: loading || serverStatus === 'checking',\n        children: loading ? 'Loading...' : 'Login'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '1.5rem',\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"sv5PRN/DxHPiXoggyJrcUHcmfxE=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","authService","axios","jsxDEV","_jsxDEV","Login","setIsLoggedIn","_s","formData","setFormData","email","password","error","setError","loading","setLoading","serverStatus","setServerStatus","navigate","checkServerHealth","response","get","timeout","status","console","log","data","err","handleChange","e","target","name","value","handleSubmit","preventDefault","login","success","token","Error","localStorage","removeItem","setItem","storageError","userData","user","id","_id","username","warn","split","JSON","stringify","userStorageError","setTimeout","message","errorMessage","_err$response$data","request","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","marginBottom","padding","backgroundColor","borderRadius","textAlign","onClick","marginTop","onSubmit","htmlFor","type","onChange","required","width","disabled","to","_c","$RefreshReg$"],"sources":["/home/matt/Projects/Cypress2/frontend/src/pages/Login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { authService } from '../services/api';\nimport axios from 'axios';\n\nfunction Login({ setIsLoggedIn }) {\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [serverStatus, setServerStatus] = useState(null);\n  const navigate = useNavigate();\n\n  // Check server health on component mount\n  useEffect(() => {\n    checkServerHealth();\n  }, []);\n\n  const checkServerHealth = async () => {\n    try {\n      setServerStatus('checking');\n      // Try to reach the server's health endpoint\n      const response = await axios.get('http://localhost:5000/health', { \n        timeout: 5000 \n      });\n      \n      if (response.status === 200) {\n        console.log('Server is healthy:', response.data);\n        setServerStatus('online');\n      } else {\n        setServerStatus('error');\n      }\n    } catch (err) {\n      console.error('Server health check failed:', err);\n      setServerStatus('offline');\n    }\n  };\n\n  const { email, password } = formData;\n\n  const handleChange = e => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n\n    try {\n      console.log('Login form submitted:', { email: formData.email });\n      \n      // If server was offline, check again first\n      if (serverStatus === 'offline') {\n        await checkServerHealth();\n      }\n      \n      console.log('Calling auth service login...');\n      const response = await authService.login(formData);\n      console.log('Login response received:', response.data);\n      \n      if (response.data.success) {\n        // Double check token exists\n        if (!response.data.token) {\n          console.error('No token in response:', response.data);\n          throw new Error('Authentication failed: No token received');\n        }\n        \n        // Store token with proper error handling\n        try {\n          localStorage.removeItem('token'); // Clear any existing token first\n          localStorage.setItem('token', response.data.token);\n          console.log('Token stored successfully');\n        } catch (storageError) {\n          console.error('Error storing token in localStorage:', storageError);\n          throw new Error('Failed to store authentication data');\n        }\n        \n        // Create a proper user object\n        let userData = {};\n        \n        if (response.data.user) {\n          userData = {\n            id: response.data.user.id || response.data.user._id,\n            username: response.data.user.username || 'User',\n            email: response.data.user.email || formData.email\n          };\n        } else {\n          console.warn('No user data in response, creating minimal user data');\n          userData = {\n            id: 'unknown',\n            username: formData.email.split('@')[0],\n            email: formData.email\n          };\n        }\n        \n        console.log('Storing user data:', userData);\n        \n        try {\n          localStorage.removeItem('user'); // Clear existing user data first\n          localStorage.setItem('user', JSON.stringify(userData));\n          console.log('User data stored successfully');\n        } catch (userStorageError) {\n          console.error('Error storing user data:', userStorageError);\n          // Continue anyway since we have the token\n        }\n        \n        // Update login state in the app\n        console.log('Setting isLoggedIn to true');\n        setIsLoggedIn(true);\n        \n        // Redirect with slight delay to ensure state updates\n        setTimeout(() => {\n          console.log('Redirecting to dashboard...');\n          navigate('/dashboard');\n        }, 100);\n      } else {\n        console.error('Login failed with success: false', response.data);\n        setError('Login failed: ' + (response.data.message || 'Unknown error'));\n      }\n      \n    } catch (err) {\n      console.error('Login error:', err);\n      let errorMessage = 'Authentication failed';\n      \n      if (err.response) {\n        // The request was made and the server responded with an error status\n        console.error('Server error response:', err.response.data);\n        errorMessage = err.response.data?.message || `Server error: ${err.response.status}`;\n      } else if (err.request) {\n        // The request was made but no response was received\n        console.error('No response received from server');\n        errorMessage = 'Network error - server unreachable. Please check your connection.';\n        \n        // Set server status to offline\n        setServerStatus('offline');\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.error('Error during login request:', err.message);\n        errorMessage = err.message;\n      }\n      \n      setError(errorMessage);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"form-container\">\n      <h2 className=\"form-title\">Login</h2>\n      \n      {serverStatus === 'offline' && (\n        <div style={{ color: 'orange', marginBottom: '1rem', padding: '0.5rem', backgroundColor: '#fff3cd', borderRadius: '4px', textAlign: 'center' }}>\n          <p>Server appears to be offline or unreachable.</p>\n          <button \n            className=\"btn btn-secondary\" \n            onClick={checkServerHealth}\n            style={{ marginTop: '0.5rem' }}\n          >\n            Check Server Status\n          </button>\n        </div>\n      )}\n      \n      {error && (\n        <div style={{ color: 'red', marginBottom: '1rem', textAlign: 'center' }}>\n          {error}\n        </div>\n      )}\n      \n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"email\">Email</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n            className=\"form-control\"\n            required\n          />\n        </div>\n        \n        <div className=\"form-group\">\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n            className=\"form-control\"\n            required\n          />\n        </div>\n        \n        <button \n          type=\"submit\" \n          className=\"btn btn-primary\" \n          style={{ width: '100%', marginTop: '1rem' }}\n          disabled={loading || serverStatus === 'checking'}\n        >\n          {loading ? 'Loading...' : 'Login'}\n        </button>\n      </form>\n      \n      <div style={{ marginTop: '1.5rem', textAlign: 'center' }}>\n        <p>Don't have an account? <Link to=\"/register\">Register</Link></p>\n      </div>\n    </div>\n  );\n}\n\nexport default Login; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}