{"ast":null,"code":"import axios from 'axios';\n\n// Create a configured axios instance with base URL and default settings\nconst api = axios.create({\n  baseURL: 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  },\n  timeout: 10000 // 10 second timeout\n});\n\n// Add a request interceptor to attach the auth token to every request\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['x-auth-token'] = token;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add a response interceptor to handle common error patterns\napi.interceptors.response.use(response => response, error => {\n  console.error('API Error:', error);\n\n  // Check for network errors\n  if (!error.response) {\n    console.error('Network error - no response received');\n  }\n\n  // Handle token expiration/invalidation\n  if (error.response && error.response.status === 401) {\n    console.log('Authentication error, redirecting to login');\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    // Redirect to login page if not already there\n    if (window.location.pathname !== '/login') {\n      window.location.href = '/login';\n    }\n  }\n  return Promise.reject(error);\n});\n\n// Auth service functions\nexport const authService = {\n  login: async credentials => {\n    return api.post('/auth/login', credentials);\n  },\n  register: async userData => {\n    return api.post('/auth/register', userData);\n  },\n  updateProfile: async userData => {\n    return api.put('/auth/profile', userData);\n  }\n};\n\n// Report service functions\nexport const reportService = {\n  getAll: async () => {\n    return api.get('/reports');\n  },\n  getUserReports: async () => {\n    return api.get('/reports/user/my-reports');\n  },\n  createReport: async reportData => {\n    return api.post('/reports', reportData);\n  },\n  updateReport: async (id, reportData) => {\n    return api.put(`/reports/${id}`, reportData);\n  },\n  deleteReport: async id => {\n    return api.delete(`/reports/${id}`);\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","timeout","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","response","console","status","log","removeItem","window","location","pathname","href","authService","login","credentials","post","register","userData","updateProfile","put","reportService","getAll","get","getUserReports","createReport","reportData","updateReport","id","deleteReport","delete"],"sources":["/home/matt/Projects/Cypress2/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create a configured axios instance with base URL and default settings\nconst api = axios.create({\n  baseURL: 'http://localhost:5000/api',\n  headers: {\n    'Content-Type': 'application/json',\n    'Accept': 'application/json'\n  },\n  timeout: 10000 // 10 second timeout\n});\n\n// Add a request interceptor to attach the auth token to every request\napi.interceptors.request.use(\n  config => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['x-auth-token'] = token;\n    }\n    return config;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\n\n// Add a response interceptor to handle common error patterns\napi.interceptors.response.use(\n  response => response,\n  error => {\n    console.error('API Error:', error);\n    \n    // Check for network errors\n    if (!error.response) {\n      console.error('Network error - no response received');\n    }\n    \n    // Handle token expiration/invalidation\n    if (error.response && error.response.status === 401) {\n      console.log('Authentication error, redirecting to login');\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      // Redirect to login page if not already there\n      if (window.location.pathname !== '/login') {\n        window.location.href = '/login';\n      }\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\n// Auth service functions\nexport const authService = {\n  login: async (credentials) => {\n    return api.post('/auth/login', credentials);\n  },\n  register: async (userData) => {\n    return api.post('/auth/register', userData);\n  },\n  updateProfile: async (userData) => {\n    return api.put('/auth/profile', userData);\n  }\n};\n\n// Report service functions\nexport const reportService = {\n  getAll: async () => {\n    return api.get('/reports');\n  },\n  getUserReports: async () => {\n    return api.get('/reports/user/my-reports');\n  },\n  createReport: async (reportData) => {\n    return api.post('/reports', reportData);\n  },\n  updateReport: async (id, reportData) => {\n    return api.put(`/reports/${id}`, reportData);\n  },\n  deleteReport: async (id) => {\n    return api.delete(`/reports/${id}`);\n  }\n};\n\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE,2BAA2B;EACpCC,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB;IAClC,QAAQ,EAAE;EACZ,CAAC;EACDC,OAAO,EAAE,KAAK,CAAC;AACjB,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAC1BC,MAAM,IAAI;EACR,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACL,OAAO,CAAC,cAAc,CAAC,GAAGM,KAAK;EACxC;EACA,OAAOD,MAAM;AACf,CAAC,EACDI,KAAK,IAAI;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAZ,GAAG,CAACK,YAAY,CAACU,QAAQ,CAACR,GAAG,CAC3BQ,QAAQ,IAAIA,QAAQ,EACpBH,KAAK,IAAI;EACPI,OAAO,CAACJ,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;;EAElC;EACA,IAAI,CAACA,KAAK,CAACG,QAAQ,EAAE;IACnBC,OAAO,CAACJ,KAAK,CAAC,sCAAsC,CAAC;EACvD;;EAEA;EACA,IAAIA,KAAK,CAACG,QAAQ,IAAIH,KAAK,CAACG,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;IACnDD,OAAO,CAACE,GAAG,CAAC,4CAA4C,CAAC;IACzDR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC;IAChCT,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC;IAC/B;IACA,IAAIC,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,QAAQ,EAAE;MACzCF,MAAM,CAACC,QAAQ,CAACE,IAAI,GAAG,QAAQ;IACjC;EACF;EAEA,OAAOV,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMY,WAAW,GAAG;EACzBC,KAAK,EAAE,MAAOC,WAAW,IAAK;IAC5B,OAAO1B,GAAG,CAAC2B,IAAI,CAAC,aAAa,EAAED,WAAW,CAAC;EAC7C,CAAC;EACDE,QAAQ,EAAE,MAAOC,QAAQ,IAAK;IAC5B,OAAO7B,GAAG,CAAC2B,IAAI,CAAC,gBAAgB,EAAEE,QAAQ,CAAC;EAC7C,CAAC;EACDC,aAAa,EAAE,MAAOD,QAAQ,IAAK;IACjC,OAAO7B,GAAG,CAAC+B,GAAG,CAAC,eAAe,EAAEF,QAAQ,CAAC;EAC3C;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,aAAa,GAAG;EAC3BC,MAAM,EAAE,MAAAA,CAAA,KAAY;IAClB,OAAOjC,GAAG,CAACkC,GAAG,CAAC,UAAU,CAAC;EAC5B,CAAC;EACDC,cAAc,EAAE,MAAAA,CAAA,KAAY;IAC1B,OAAOnC,GAAG,CAACkC,GAAG,CAAC,0BAA0B,CAAC;EAC5C,CAAC;EACDE,YAAY,EAAE,MAAOC,UAAU,IAAK;IAClC,OAAOrC,GAAG,CAAC2B,IAAI,CAAC,UAAU,EAAEU,UAAU,CAAC;EACzC,CAAC;EACDC,YAAY,EAAE,MAAAA,CAAOC,EAAE,EAAEF,UAAU,KAAK;IACtC,OAAOrC,GAAG,CAAC+B,GAAG,CAAC,YAAYQ,EAAE,EAAE,EAAEF,UAAU,CAAC;EAC9C,CAAC;EACDG,YAAY,EAAE,MAAOD,EAAE,IAAK;IAC1B,OAAOvC,GAAG,CAACyC,MAAM,CAAC,YAAYF,EAAE,EAAE,CAAC;EACrC;AACF,CAAC;AAED,eAAevC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}