{"ast":null,"code":"var _jsxFileName = \"/home/matt/Projects/Cypress2/frontend/src/pages/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [showReportForm, setShowReportForm] = useState(false);\n  const [reportFormData, setReportFormData] = useState({\n    name: '',\n    description: '',\n    userLocation: '',\n    type: 'infrastructure'\n  });\n  const [locationCoordinates, setLocationCoordinates] = useState(null);\n  const [formError, setFormError] = useState('');\n  const [formSuccess, setFormSuccess] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [userReports, setUserReports] = useState([]);\n  const [reportsFetched, setReportsFetched] = useState(false);\n  const navigate = useNavigate();\n  const autocompleteRef = useRef(null);\n  const locationInputRef = useRef(null);\n\n  // Function to fetch user reports\n  const fetchUserReports = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        console.error('No token found, cannot fetch reports');\n        return;\n      }\n      const response = await axios.get('http://localhost:5000/api/reports/user/my-reports', {\n        headers: {\n          'x-auth-token': token\n        }\n      });\n      if (response.data.success) {\n        console.log('User reports:', response.data.data);\n        setUserReports(response.data.data);\n      } else {\n        console.error('Failed to fetch reports:', response.data.message);\n      }\n    } catch (err) {\n      console.error('Error fetching user reports:', err);\n    } finally {\n      setReportsFetched(true);\n    }\n  };\n\n  // Initialize Google Maps Autocomplete\n  const initializeAutocomplete = () => {\n    if (!window.google || !locationInputRef.current) return;\n\n    // Create autocomplete instance\n    autocompleteRef.current = new window.google.maps.places.Autocomplete(locationInputRef.current, {\n      types: ['address']\n    });\n\n    // Add listener for place changed\n    autocompleteRef.current.addListener('place_changed', () => {\n      const place = autocompleteRef.current.getPlace();\n      if (!place.geometry) {\n        console.error('No location details available for this place');\n        return;\n      }\n\n      // Get the selected address\n      const address = place.formatted_address;\n\n      // Get the location coordinates\n      const lat = place.geometry.location.lat();\n      const lng = place.geometry.location.lng();\n\n      // Update form data with the selected address\n      setReportFormData(prev => ({\n        ...prev,\n        userLocation: address\n      }));\n\n      // Save coordinates for submission\n      setLocationCoordinates({\n        lat,\n        lng\n      });\n      console.log('Selected location:', {\n        address,\n        lat,\n        lng\n      });\n    });\n  };\n\n  // Load Google Maps API script\n  const loadGoogleMapsScript = () => {\n    if (window.google) {\n      initializeAutocomplete();\n      return;\n    }\n    const googleMapsApiKey = process.env.REACT_APP_GOOGLE_MAPS_API_KEY || '';\n    const script = document.createElement('script');\n    script.src = `https://maps.googleapis.com/maps/api/js?key=${googleMapsApiKey}&libraries=places`;\n    script.async = true;\n    script.defer = true;\n    script.onload = initializeAutocomplete;\n    document.head.appendChild(script);\n    return () => {\n      // Clean up script on unmount\n      document.head.removeChild(script);\n    };\n  };\n  useEffect(() => {\n    // Check if user is logged in\n    const token = localStorage.getItem('token');\n    const userData = localStorage.getItem('user');\n    if (!token) {\n      navigate('/login');\n      return;\n    }\n    if (userData) {\n      setUser(JSON.parse(userData));\n      // Fetch user's reports when component mounts\n      fetchUserReports();\n    }\n\n    // Load Google Maps API when showing the report form\n    if (showReportForm) {\n      loadGoogleMapsScript();\n    }\n  }, [navigate, showReportForm]);\n  const handleReportChange = e => {\n    setReportFormData({\n      ...reportFormData,\n      [e.target.name]: e.target.value\n    });\n\n    // If the location field is changed manually, reset the coordinates\n    if (e.target.name === 'userLocation') {\n      setLocationCoordinates(null);\n    }\n  };\n  const handleReportSubmit = async e => {\n    e.preventDefault();\n    setFormError('');\n    setFormSuccess('');\n    setLoading(true);\n    try {\n      // Get the auth token\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setFormError('Authentication error. Please login again.');\n        return;\n      }\n\n      // Use the coordinates from Google Places if available, otherwise use default\n      let coordinates = [-79.3832, 43.6532]; // Toronto coordinates [longitude, latitude]\n\n      if (locationCoordinates) {\n        // Convert to [longitude, latitude] format for GeoJSON\n        coordinates = [locationCoordinates.lng, locationCoordinates.lat];\n      }\n\n      // Create proper GeoJSON Point\n      const locationData = {\n        type: 'Point',\n        coordinates: coordinates\n      };\n\n      // Create the report payload with all required fields\n      const reportData = {\n        name: reportFormData.name,\n        description: reportFormData.description,\n        userLocation: reportFormData.userLocation,\n        type: reportFormData.type,\n        location: locationData\n      };\n      console.log('Submitting report with data:', JSON.stringify(reportData, null, 2));\n\n      // Make the API request with auth token\n      const response = await axios.post('http://localhost:5000/api/reports', reportData, {\n        headers: {\n          'x-auth-token': token,\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Response:', response.data);\n      if (response.data.success) {\n        setFormSuccess('Report submitted successfully!');\n        setReportFormData({\n          name: '',\n          description: '',\n          userLocation: '',\n          type: 'infrastructure'\n        });\n        setLocationCoordinates(null);\n        setShowReportForm(false);\n\n        // Refresh reports list after successful submission\n        fetchUserReports();\n      } else {\n        setFormError(response.data.message || 'Unknown error occurred');\n      }\n    } catch (err) {\n      console.error('Error submitting report:', err);\n\n      // Log all error details to help debug\n      if (err.response) {\n        var _err$response$data;\n        console.error('Error status:', err.response.status);\n        console.error('Error data:', err.response.data);\n        console.error('Error headers:', err.response.headers);\n        setFormError(((_err$response$data = err.response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || `Server error: ${err.response.status}`);\n      } else if (err.request) {\n        console.error('No response received:', err.request);\n        setFormError('No response from server. Please try again later.');\n      } else {\n        console.error('Error message:', err.message);\n        setFormError(`Error: ${err.message}`);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Format date for display\n  const formatDate = dateString => {\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  // Helper function to render status with appropriate CSS class\n  const renderStatus = status => {\n    let statusClass = '';\n    switch (status) {\n      case 'Waiting for verification':\n        statusClass = 'status-waiting';\n        break;\n      case 'Verified':\n        statusClass = 'status-verified';\n        break;\n      case 'In progress':\n        statusClass = 'status-in-progress';\n        break;\n      case 'Solved':\n        statusClass = 'status-solved';\n        break;\n      default:\n        statusClass = '';\n    }\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `status-indicator ${statusClass}`,\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this);\n  };\n\n  // If not logged in, the useEffect will redirect\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome, \", user.username, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), formSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert-success\",\n      children: formSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 12\n        }, this), \" \", user.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 12\n        }, this), \" \", user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Report a Problem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), !showReportForm ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Help improve your city by reporting issues you encounter.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          onClick: () => setShowReportForm(true),\n          children: \"Create New Report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleReportSubmit,\n        children: [formError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert-error\",\n          children: formError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Report Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            name: \"name\",\n            value: reportFormData.name,\n            onChange: handleReportChange,\n            className: \"form-control\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"type\",\n            children: \"Type of Issue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"type\",\n            name: \"type\",\n            value: reportFormData.type,\n            onChange: handleReportChange,\n            className: \"form-control\",\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"infrastructure\",\n              children: \"Infrastructure\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"cleanliness\",\n              children: \"Cleanliness\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"human\",\n              children: \"Human-related\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"description\",\n            name: \"description\",\n            value: reportFormData.description,\n            onChange: handleReportChange,\n            className: \"form-control\",\n            rows: \"5\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"userLocation\",\n            children: \"Your Location (Start typing for autocomplete)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"userLocation\",\n            name: \"userLocation\",\n            value: reportFormData.userLocation,\n            onChange: handleReportChange,\n            ref: locationInputRef,\n            className: \"form-control\",\n            placeholder: \"e.g., 123 Main St, Toronto\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this), locationCoordinates && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location-found\",\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: \"\\u2713 Location found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn btn-secondary\",\n            onClick: () => setShowReportForm(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary\",\n            disabled: loading,\n            children: loading ? 'Submitting...' : 'Submit Report'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Your Reports\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this), !reportsFetched ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading your reports...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 11\n      }, this) : userReports.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"You haven't submitted any reports yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reports-list\",\n        children: userReports.map(report => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"report-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: report.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"report-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Type:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 22\n              }, this), \" \", report.type]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 22\n              }, this), \" \", renderStatus(report.status)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Description:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 22\n              }, this), \" \", report.description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Location:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 22\n              }, this), \" \", report.userLocation]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Submitted:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 22\n              }, this), \" \", formatDate(report.createdAt)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 17\n          }, this)]\n        }, report._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 282,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"QaFoKdv4GC30mNOzn+qUiRdvtVY=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useNavigate","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","user","setUser","showReportForm","setShowReportForm","reportFormData","setReportFormData","name","description","userLocation","type","locationCoordinates","setLocationCoordinates","formError","setFormError","formSuccess","setFormSuccess","loading","setLoading","userReports","setUserReports","reportsFetched","setReportsFetched","navigate","autocompleteRef","locationInputRef","fetchUserReports","token","localStorage","getItem","console","error","response","get","headers","data","success","log","message","err","initializeAutocomplete","window","google","current","maps","places","Autocomplete","types","addListener","place","getPlace","geometry","address","formatted_address","lat","location","lng","prev","loadGoogleMapsScript","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","script","document","createElement","src","async","defer","onload","head","appendChild","removeChild","userData","JSON","parse","handleReportChange","e","target","value","handleReportSubmit","preventDefault","coordinates","locationData","reportData","stringify","post","_err$response$data","status","request","formatDate","dateString","options","year","month","day","Date","toLocaleDateString","undefined","renderStatus","statusClass","className","children","fileName","_jsxFileName","lineNumber","columnNumber","username","email","onClick","onSubmit","htmlFor","id","onChange","required","rows","ref","placeholder","disabled","length","map","report","createdAt","_id","_c","$RefreshReg$"],"sources":["/home/matt/Projects/Cypress2/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction Dashboard() {\n  const [user, setUser] = useState(null);\n  const [showReportForm, setShowReportForm] = useState(false);\n  const [reportFormData, setReportFormData] = useState({\n    name: '',\n    description: '',\n    userLocation: '',\n    type: 'infrastructure'\n  });\n  const [locationCoordinates, setLocationCoordinates] = useState(null);\n  const [formError, setFormError] = useState('');\n  const [formSuccess, setFormSuccess] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [userReports, setUserReports] = useState([]);\n  const [reportsFetched, setReportsFetched] = useState(false);\n  const navigate = useNavigate();\n  const autocompleteRef = useRef(null);\n  const locationInputRef = useRef(null);\n\n  // Function to fetch user reports\n  const fetchUserReports = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      \n      if (!token) {\n        console.error('No token found, cannot fetch reports');\n        return;\n      }\n      \n      const response = await axios.get(\n        'http://localhost:5000/api/reports/user/my-reports',\n        {\n          headers: {\n            'x-auth-token': token\n          }\n        }\n      );\n      \n      if (response.data.success) {\n        console.log('User reports:', response.data.data);\n        setUserReports(response.data.data);\n      } else {\n        console.error('Failed to fetch reports:', response.data.message);\n      }\n    } catch (err) {\n      console.error('Error fetching user reports:', err);\n    } finally {\n      setReportsFetched(true);\n    }\n  };\n\n  // Initialize Google Maps Autocomplete\n  const initializeAutocomplete = () => {\n    if (!window.google || !locationInputRef.current) return;\n    \n    // Create autocomplete instance\n    autocompleteRef.current = new window.google.maps.places.Autocomplete(\n      locationInputRef.current,\n      { types: ['address'] }\n    );\n    \n    // Add listener for place changed\n    autocompleteRef.current.addListener('place_changed', () => {\n      const place = autocompleteRef.current.getPlace();\n      \n      if (!place.geometry) {\n        console.error('No location details available for this place');\n        return;\n      }\n      \n      // Get the selected address\n      const address = place.formatted_address;\n      \n      // Get the location coordinates\n      const lat = place.geometry.location.lat();\n      const lng = place.geometry.location.lng();\n      \n      // Update form data with the selected address\n      setReportFormData(prev => ({\n        ...prev,\n        userLocation: address\n      }));\n      \n      // Save coordinates for submission\n      setLocationCoordinates({ lat, lng });\n      \n      console.log('Selected location:', { address, lat, lng });\n    });\n  };\n\n  // Load Google Maps API script\n  const loadGoogleMapsScript = () => {\n    if (window.google) {\n      initializeAutocomplete();\n      return;\n    }\n    \n    const googleMapsApiKey = process.env.REACT_APP_GOOGLE_MAPS_API_KEY || '';\n    const script = document.createElement('script');\n    script.src = `https://maps.googleapis.com/maps/api/js?key=${googleMapsApiKey}&libraries=places`;\n    script.async = true;\n    script.defer = true;\n    script.onload = initializeAutocomplete;\n    document.head.appendChild(script);\n    \n    return () => {\n      // Clean up script on unmount\n      document.head.removeChild(script);\n    };\n  };\n\n  useEffect(() => {\n    // Check if user is logged in\n    const token = localStorage.getItem('token');\n    const userData = localStorage.getItem('user');\n    \n    if (!token) {\n      navigate('/login');\n      return;\n    }\n    \n    if (userData) {\n      setUser(JSON.parse(userData));\n      // Fetch user's reports when component mounts\n      fetchUserReports();\n    }\n    \n    // Load Google Maps API when showing the report form\n    if (showReportForm) {\n      loadGoogleMapsScript();\n    }\n  }, [navigate, showReportForm]);\n\n  const handleReportChange = (e) => {\n    setReportFormData({\n      ...reportFormData,\n      [e.target.name]: e.target.value\n    });\n    \n    // If the location field is changed manually, reset the coordinates\n    if (e.target.name === 'userLocation') {\n      setLocationCoordinates(null);\n    }\n  };\n\n  const handleReportSubmit = async (e) => {\n    e.preventDefault();\n    setFormError('');\n    setFormSuccess('');\n    setLoading(true);\n\n    try {\n      // Get the auth token\n      const token = localStorage.getItem('token');\n      \n      if (!token) {\n        setFormError('Authentication error. Please login again.');\n        return;\n      }\n      \n      // Use the coordinates from Google Places if available, otherwise use default\n      let coordinates = [-79.3832, 43.6532]; // Toronto coordinates [longitude, latitude]\n      \n      if (locationCoordinates) {\n        // Convert to [longitude, latitude] format for GeoJSON\n        coordinates = [locationCoordinates.lng, locationCoordinates.lat];\n      }\n      \n      // Create proper GeoJSON Point\n      const locationData = {\n        type: 'Point',\n        coordinates: coordinates\n      };\n      \n      // Create the report payload with all required fields\n      const reportData = {\n        name: reportFormData.name,\n        description: reportFormData.description,\n        userLocation: reportFormData.userLocation,\n        type: reportFormData.type,\n        location: locationData\n      };\n      \n      console.log('Submitting report with data:', JSON.stringify(reportData, null, 2));\n      \n      // Make the API request with auth token\n      const response = await axios.post(\n        'http://localhost:5000/api/reports',\n        reportData,\n        {\n          headers: {\n            'x-auth-token': token,\n            'Content-Type': 'application/json'\n          }\n        }\n      );\n      \n      console.log('Response:', response.data);\n      \n      if (response.data.success) {\n        setFormSuccess('Report submitted successfully!');\n        setReportFormData({\n          name: '',\n          description: '',\n          userLocation: '',\n          type: 'infrastructure'\n        });\n        setLocationCoordinates(null);\n        setShowReportForm(false);\n        \n        // Refresh reports list after successful submission\n        fetchUserReports();\n      } else {\n        setFormError(response.data.message || 'Unknown error occurred');\n      }\n    } catch (err) {\n      console.error('Error submitting report:', err);\n      \n      // Log all error details to help debug\n      if (err.response) {\n        console.error('Error status:', err.response.status);\n        console.error('Error data:', err.response.data);\n        console.error('Error headers:', err.response.headers);\n        \n        setFormError(err.response.data?.message || `Server error: ${err.response.status}`);\n      } else if (err.request) {\n        console.error('No response received:', err.request);\n        setFormError('No response from server. Please try again later.');\n      } else {\n        console.error('Error message:', err.message);\n        setFormError(`Error: ${err.message}`);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Format date for display\n  const formatDate = (dateString) => {\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n\n  // Helper function to render status with appropriate CSS class\n  const renderStatus = (status) => {\n    let statusClass = '';\n    \n    switch(status) {\n      case 'Waiting for verification':\n        statusClass = 'status-waiting';\n        break;\n      case 'Verified':\n        statusClass = 'status-verified';\n        break;\n      case 'In progress':\n        statusClass = 'status-in-progress';\n        break;\n      case 'Solved':\n        statusClass = 'status-solved';\n        break;\n      default:\n        statusClass = '';\n    }\n    \n    return (\n      <span className={`status-indicator ${statusClass}`}>\n        {status}\n      </span>\n    );\n  };\n\n  // If not logged in, the useEffect will redirect\n  if (!user) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"dashboard\">\n      <h1>Welcome, {user.username}!</h1>\n      \n      {formSuccess && (\n        <div className=\"alert-success\">\n          {formSuccess}\n        </div>\n      )}\n      \n      <div className=\"dashboard-card\">\n        <h2>Your Profile</h2>\n        <p><strong>Username:</strong> {user.username}</p>\n        <p><strong>Email:</strong> {user.email}</p>\n      </div>\n      \n      <div className=\"dashboard-card\">\n        <h2>Report a Problem</h2>\n        {!showReportForm ? (\n          <>\n            <p>Help improve your city by reporting issues you encounter.</p>\n            <button \n              className=\"btn btn-primary\" \n              onClick={() => setShowReportForm(true)}\n            >\n              Create New Report\n            </button>\n          </>\n        ) : (\n          <form onSubmit={handleReportSubmit}>\n            {formError && (\n              <div className=\"alert-error\">{formError}</div>\n            )}\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"name\">Report Title</label>\n              <input\n                type=\"text\"\n                id=\"name\"\n                name=\"name\"\n                value={reportFormData.name}\n                onChange={handleReportChange}\n                className=\"form-control\"\n                required\n              />\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"type\">Type of Issue</label>\n              <select\n                id=\"type\"\n                name=\"type\"\n                value={reportFormData.type}\n                onChange={handleReportChange}\n                className=\"form-control\"\n                required\n              >\n                <option value=\"infrastructure\">Infrastructure</option>\n                <option value=\"cleanliness\">Cleanliness</option>\n                <option value=\"human\">Human-related</option>\n              </select>\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"description\">Description</label>\n              <textarea\n                id=\"description\"\n                name=\"description\"\n                value={reportFormData.description}\n                onChange={handleReportChange}\n                className=\"form-control\"\n                rows=\"5\"\n                required\n              ></textarea>\n            </div>\n            \n            <div className=\"form-group\">\n              <label htmlFor=\"userLocation\">Your Location (Start typing for autocomplete)</label>\n              <input\n                type=\"text\"\n                id=\"userLocation\"\n                name=\"userLocation\"\n                value={reportFormData.userLocation}\n                onChange={handleReportChange}\n                ref={locationInputRef}\n                className=\"form-control\"\n                placeholder=\"e.g., 123 Main St, Toronto\"\n                required\n              />\n              {locationCoordinates && (\n                <div className=\"location-found\">\n                  <small>✓ Location found</small>\n                </div>\n              )}\n            </div>\n            \n            <div className=\"form-actions\">\n              <button \n                type=\"button\" \n                className=\"btn btn-secondary\"\n                onClick={() => setShowReportForm(false)}\n              >\n                Cancel\n              </button>\n              <button \n                type=\"submit\" \n                className=\"btn btn-primary\"\n                disabled={loading}\n              >\n                {loading ? 'Submitting...' : 'Submit Report'}\n              </button>\n            </div>\n          </form>\n        )}\n      </div>\n      \n      <div className=\"dashboard-card\">\n        <h2>Your Reports</h2>\n        {!reportsFetched ? (\n          <p>Loading your reports...</p>\n        ) : userReports.length === 0 ? (\n          <p>You haven't submitted any reports yet.</p>\n        ) : (\n          <div className=\"reports-list\">\n            {userReports.map(report => (\n              <div key={report._id} className=\"report-item\">\n                <h3>{report.name}</h3>\n                <div className=\"report-details\">\n                  <p><strong>Type:</strong> {report.type}</p>\n                  <p><strong>Status:</strong> {renderStatus(report.status)}</p>\n                  <p><strong>Description:</strong> {report.description}</p>\n                  <p><strong>Location:</strong> {report.userLocation}</p>\n                  <p><strong>Submitted:</strong> {formatDate(report.createdAt)}</p>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}